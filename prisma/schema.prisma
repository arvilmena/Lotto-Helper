// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum LottoId {
  PCSO_6_49
  PCSO_6_45
  PCSO_6_55
  PCSO_6_58
}

model Lotto {
  id                   LottoId                @id @unique
  name                 String
  pcsoId               Int?
  LottoResult          LottoResult[]
  UserMonitoredNumbers UserMonitoredNumbers[]
  LottoPrizeRule       LottoPrizeRule[]

  @@index([pcsoId])
}

model LottoPrizeRule {
  id                Int       @id @default(autoincrement())
  lotto             Lotto     @relation(fields: [lottoId], references: [id])
  lottoId           LottoId
  noOfResultMatched Int
  prize             Float
  startedAt         DateTime  @default(now())
  expiresAt         DateTime?

  @@index([lottoId])
}

model LottoResult {
  id                                 Int                                  @id @default(autoincrement())
  drawAtString                       String
  drawAt                             DateTime                             @db.Date
  results                            Json
  lotto                              Lotto                                @relation(fields: [lottoId], references: [id])
  lottoId                            LottoId
  jackpotPrize                       Float?
  winners                            Int?
  DailyNotificationQueuedLottoResult DailyNotificationQueuedLottoResult[]

  @@unique([lottoId, drawAtString])
  @@index([lottoId])
  @@index([drawAtString])
}

model DailyNotificationBatch {
  id                                 String                               @id @unique
  notificationAt                     DateTime                             @db.Date
  wasProcessed                       Boolean                              @default(false)
  startedAt                          DateTime                             @default(now())
  finishedAt                         DateTime?
  DailyNotificationQueuedLottoResult DailyNotificationQueuedLottoResult[]
  DailyNotificationQueuedUser        DailyNotificationQueuedUser[]
}

model DailyNotificationQueuedLottoResult {
  id            Int                     @id @default(autoincrement())
  lottoResult   LottoResult             @relation(fields: [lottoResultId], references: [id])
  lottoResultId Int
  batch         DailyNotificationBatch? @relation(fields: [batchId], references: [id])
  batchId       String?

  @@unique([batchId, lottoResultId])
  @@index([lottoResultId])
}

enum LottoGameType {
  Standard
  System5R
  System7
  System8
  System9
  System10
  System11
  System12
}

model UserMonitoredNumbers {
  id        Int           @id @default(autoincrement())
  userId    String
  lotto     Lotto         @relation(fields: [lottoId], references: [id])
  lottoId   LottoId
  numbers   Json
  gameType  LottoGameType
  startedAt DateTime      @default(now())
  expiresAt DateTime?

  @@index([userId])
  @@index([lottoId])
  @@index([userId, lottoId], name: "user_lotto")
}

model DailyNotificationQueuedUser {
  id           Int                    @id @default(autoincrement())
  userId       String
  batch        DailyNotificationBatch @relation(fields: [batchId], references: [id])
  batchId      String
  wasProcessed Boolean                @default(false)

  @@unique([batchId, userId])
  @@index([userId])
}
